/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CardDeck, CardDeckInterface } from "../CardDeck";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "cards",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "cardIndex",
        type: "uint8",
      },
    ],
    name: "Card",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "deal",
    outputs: [
      {
        internalType: "uint8",
        name: "cardIndex",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remaining",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remainingIndices",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610769380380610769833981810160405281019061003291906100e0565b60005b8160ff168160ff16101561009b5760008190806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360ff16021790555080806100939061013c565b915050610035565b5050610166565b600080fd5b600060ff82169050919050565b6100bd816100a7565b81146100c857600080fd5b50565b6000815190506100da816100b4565b92915050565b6000602082840312156100f6576100f56100a2565b5b6000610104848285016100cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610147826100a7565b915060ff82141561015b5761015a61010d565b5b600182019050919050565b6105f4806101756000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806355234ec014610046578063c959c42b14610064578063f4b38aae14610094575b600080fd5b61004e6100c4565b60405161005b9190610304565b60405180910390f35b61007e60048036038101906100799190610350565b6100d0565b60405161008b9190610399565b60405180910390f35b6100ae60048036038101906100a99190610350565b6101ae565b6040516100bb9190610399565b60405180910390f35b60008080549050905090565b60008060008054905011610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090610411565b60405180910390fd5b600080805490508361012b9190610460565b9050600080828154811061014257610141610491565b5b90600052602060002090602091828204019190069054906101000a900460ff16905061016d826101e2565b7fa048d3135ba77a30b030743b9da4602fd718493ce6179304e32a762afeb34fe78160405161019c9190610399565b60405180910390a18092505050919050565b600081815481106101be57600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000805490508110610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061050c565b60405180910390fd5b6000600160008054905061023d919061055b565b8154811061024e5761024d610491565b5b90600052602060002090602091828204019190069054906101000a900460ff166000828154811061028257610281610491565b5b90600052602060002090602091828204019190066101000a81548160ff021916908360ff16021790555060008054806102be576102bd61058f565b5b60019003818190600052602060002090602091828204019190066101000a81549060ff0219169055905550565b6000819050919050565b6102fe816102eb565b82525050565b600060208201905061031960008301846102f5565b92915050565b600080fd5b61032d816102eb565b811461033857600080fd5b50565b60008135905061034a81610324565b92915050565b6000602082840312156103665761036561031f565b5b60006103748482850161033b565b91505092915050565b600060ff82169050919050565b6103938161037d565b82525050565b60006020820190506103ae600083018461038a565b92915050565b600082825260208201905092915050565b7f4465636b436f6d706c6574650000000000000000000000000000000000000000600082015250565b60006103fb600c836103b4565b9150610406826103c5565b602082019050919050565b6000602082019050818103600083015261042a816103ee565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061046b826102eb565b9150610476836102eb565b92508261048657610485610431565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e6465784572726f7200000000000000000000000000000000000000000000600082015250565b60006104f6600a836103b4565b9150610501826104c0565b602082019050919050565b60006020820190508181036000830152610525816104e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610566826102eb565b9150610571836102eb565b9250828210156105845761058361052c565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220abbb30e5a1f6f3715f9ad18f69f19ec8c7236543daf1b8b63f20b7a17d3d1f5c64736f6c634300080b0033";

export class CardDeck__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    cards: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CardDeck> {
    return super.deploy(cards, overrides || {}) as Promise<CardDeck>;
  }
  getDeployTransaction(
    cards: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cards, overrides || {});
  }
  attach(address: string): CardDeck {
    return super.attach(address) as CardDeck;
  }
  connect(signer: Signer): CardDeck__factory {
    return super.connect(signer) as CardDeck__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardDeckInterface {
    return new utils.Interface(_abi) as CardDeckInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CardDeck {
    return new Contract(address, _abi, signerOrProvider) as CardDeck;
  }
}
